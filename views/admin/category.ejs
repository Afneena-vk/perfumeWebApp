<%- include("../../views/partials/admin/header") %>

<head>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css" />
  <style>
    .col-md-3, .col-md-8 {
      padding: 20px;
      border: 1px solid #ddd;
      border-radius: 10px;
      margin: 10px 0;
    }

    .form-label {
      margin-bottom: 8px;
    }

    .form-control {
      width: 100%;
      padding: 8px;
      margin-bottom: 10px;
      border: 1px solid #ccc;
      border-radius: 5px;
      box-sizing: border-box;
    }

    .d-grid {
      margin-top: 20px;
    }

    .btn-primary {
      background-color: #426c89;
      color: #fff;
      border: 1px solid #426c89;
      border-radius: 5px;
      padding: 10px 20px;
      cursor: pointer;
    }

    .btn-primary:hover {
      background-color: #426c89;
      border-color: #426c89;
    }

    .pagination-container {
      text-align: center;
    }

    .pagination {
      display: inline-block;
    }
    .pagination {
  display: flex; 
  justify-content: center; 
  list-style: none; 
  padding: 0;
  margin: 0;
}

.pagination .page-item {
  margin: 0 5px; 
}

    .pagination a,
    .pagination .current-page {
      display: inline-block;
      padding: 5px 10px;
      margin: 0 2px;
      border: 1px solid #ddd;
      text-decoration: none;
      color: #333;
    }

    .pagination a:hover {
      background-color: #f5f5f5;
    }

    .error-message {
      color: red;
      display: block;
    }

    .deleted-category {
      opacity: 0.6;
      color: gray;
      text-decoration: line-through;
    }



.pagination .page-item.active .page-link {
    background-color: #426c89; 
    color: #ffffff; 
    border: 1px solid #426c89;
}


  </style>
</head>

<body>
  <section class="content-main">
    <div class="content-header">
      <div>
        <h2 class="content-title card-title">Category</h2>
      </div>
    </div>
    <header class="card-header text-center mb-20">
      <form action="/admin/category/" method="get" class="d-inline">
        <div class="input-group input-group-sm border border-1 border-grey rounded-pill mx-auto" style="max-width: 100%; width: 100%; max-width: 500px;">
          <input type="text" class="form-control border-0 rounded-pill mt-3" placeholder="Search categories" name="search" />
          <button class="btn" type="submit">Search</button>
        </div>
      </form>
    </header>
    <div class="card">
      <div class="card-body">
        <div class="row">
          <div class="col-md-3">
            <form method="post" action="/admin/addCategory" onsubmit="return handleFormSubmit(event)">
              <div class="mb-4">
                <label for="product_name" class="form-label">Name</label>
                <input type="text" name="name" placeholder="Type here" class="form-control" id="product_name"/>
                <div id="name-error" class="error-message"></div>
              </div>
              <div class="mb-4">
                <label class="form-label">Description</label>
                <textarea placeholder="Type here" name="description" class="form-control" id="descriptionId"></textarea>
                <div id="description-error" class="error-message"></div>
              </div>
              <div class="d-grid">
                <button class="btn btn-primary" type="submit">Create category</button>
              </div>
            </form>
          </div>
          <div class="col-md-8 ml-10">
            <div class="table-responsive">
              <table class="table table-hover">
                <thead>
                  <tr>
                    
                    <th>Name</th>
                    <th>Description</th>
                    <th>Offer Price</th>
                    <th>Offer</th>
                    <th>Status</th>
                    <th>List/Unlist</th>
                    <th class="text-start">Edit</th>
                    <th>Delete</th>
                  </tr>
                </thead>
                <tbody>
                    <%cat.reverse().forEach((category,index)=>{%>
                    <% if (!category.isDeleted) { %>
                  <tr>
                    <td class="text-start"><%=category.name%></td>
                    <td class="text-start"><%=category.description%></td>
                    <td>
                      <%if(category.categoryOffer){%>
                        <%=category.categoryOffer%>
                        <%}else{%>
                          0%
                          <%}%>
                    </td>
                    <td class="text-start">
                      <%if(category.categoryOffer===0){%>
                      <button class="btn" style="background-color: #426c89; width: 100px; margin-bottom: 10px;">
                        <a href="#" class="text-white" onclick="addOffer('<%=category._id%>')" style="text-decoration: none;">Add Offer</a>
                      </button>
                      <%}else{%>
                      <button class="btn" style="background-color: #426c89; width: 100px">
                        <a href="#" class="text-white" onclick="removeOffer('<%=category._id%>')" style="text-decoration: none;">Remove</a>
                      </button>
                      <%}%>
                    </td>
                    <td class="text-start">
                      <%if(category.isListed){%>
                      <span class="badge rounded-pill alert-success" style="width: 60px; color: black;">Listed</span>
                      <%}else{%>
                      <span class="badge rounded-pill alert-danger" style="width: 60px; color: black;">Unlisted</span>
                      <%}%>
                    </td>
                    <td class="text-start">
                      <%if(category.isListed){%>
                      <button class="btn btn-danger" style="width: 70px">
                        <a href="/admin/listCategory?id=<%=category._id%>" class="text-white" style="text-decoration: none;">Unlist</a>
                      </button>
                      <%}else{%>
                      <button class="btn btn-success" style="width: 70px">
                        <a href="/admin/unlistCategory?id=<%=category._id%>" class="text-white" style="text-decoration: none;">List</a>
                      </button>
                      <%}%>
                    </td>
                    <td class="text-start">
                      <a href="/admin/editCategory?id=<%=category._id%>" class="btn  text-white" style="background-color: #426c89;" >Edit</a>
                    </td>
                    <td class="text-start">
                      <button class="btn btn-danger" onclick="deleteCategory('<%= category._id %>')">Delete</button>
                    </td>
                  </tr>
                  <%} else { %>
                    <tr class="deleted-category">
                      <td class="text-start"><%= category.name %> <span class="badge badge-danger">Deleted</span></td>
                      <td class="text-start"><%= category.description %></td>
                     
                      <td class="text-muted">N/A</td>
                      <td class="text-muted">N/A</td>
                    </tr>
                  <% } %>
                <% }) %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="container mt-3">
      <nav aria-label="Page navigation">
          <ul class="pagination justify-content-center mb-20" style="margin-right: 200px;">
   
   
              <% for (let i = 1; i <= totalPages; i++) { %>
              <li class="page-item <%=(i === currentPage) ? 'active' : '' %>">
                  <a class="page-link" href="?page=<%= i %>"><%= i %></a>
              </li>
              <% } %>
   
   
          </ul>
      </nav>
   </div>
   

  </section>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

  <script>

     function handleFormSubmit(event){

        event.preventDefault();
        if(!validateForm()){
            return;
        }
        const name = document.getElementsByName("name")[0].value;
        const description = document.getElementById("descriptionId").value;

        fetch('/admin/addCategory',{
            method:'POST',
            headers:{
                'Content-Type':'application/json'
            },
            body:JSON.stringify({name,description})
        })
        .then(response=>{
            if(!response.ok){
                return response.json().then(err =>{
                   throw new Error(err.error);
                });
            }
            return response.json();
        })
        .then(data=>{
          location.reload();
        })
        .catch(error=>{
          if(error.message === "Category already exists"){
            Swal.fire({
              icon: "error",
              title: "Oops",
              text: "Category already exists",
            });
          } else {
            Swal.fire({
              icon:"error",
              title:"Oops",
              text:"An error occured while adding the category",
            });
          }
        });
     }

     function validateForm (){
        clearErrorMessages();
        const name = document.getElementsByName("name")[0].value.trim();
        const description = document.getElementById("descriptionId").value.trim();
        isValid=true;

        if(name===""){
            displayErrorMessage("name-error","Please enter a name");
            isValid= false;
        }else if(!/^[a-zA-Z\s]+$/.test(name)){
            displayErrorMessage("name-error","Category name should contain only alphabetic characters");
            isValid =false;

        }

        if (description === "") {
        displayErrorMessage("description-error", "Please enter a description");
        isValid = false;
    } else if (!/^[a-zA-Z\s.,'"-]+$/.test(description)) {
        displayErrorMessage("description-error", "Description can contain only alphabets, spaces, periods, commas, single quotes, and double quotes");
        isValid = false;
    }
        return isValid;
     }


     function displayErrorMessage(elementId,message){
        const errorElement = document.getElementById(elementId);
        errorElement.innerText = message;
        errorElement.style.display = "block";
     }

     function clearErrorMessages(){
        const errorElements = document.getElementsByClassName("error-message");
        Array.from(errorElements).forEach((element)=>{
            element.innerText="";
            element.style.display="none";
        });
     }

  
  function deleteCategory(id) {
    fetch(`/admin/deleteCategory`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ id })
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        
        location.reload();
      } else {
        alert("Error: " + data.message);
      }
    })
    .catch(error => console.error('Error:', error));
  }


  async function addOffer(categoryId){
    const {value:amount} = await Swal.fire({
      title:"Offer in percentage",
      input:"number",
      inputLabel:"Percentage",
      inputPlaceholder:"%",

    });

 if(amount){

try {
  const response = await fetch("/admin/addCategoryOffer",{
    method:"POST",
    headers:{
      'content-type':"application/json",
    },
    body:JSON.stringify({
      percentage:amount,
      categoryId:categoryId,

    }),
  });

  const data = await response.json();
  if(response.ok && data.status === true) {
    Swal.fire(
      "Offer added",
      "The offer has been added",
      "success"
    ).then(()=>{
      location.reload();
    })
  }else {
    Swal.fire("Failed", data.message || "Adding offer failed" , "error");
  }

} catch (error) {
  Swal.fire(
    "Error",
    "An error occured while adding the offer",
    "error"
  );
  console.log("Error adding offer",error);
   }

  }
 }
 

 async function removeOffer(categoryId){
  try {
    const response = await fetch("/admin/removeCategoryOffer",{
      method:"POST",
    headers:{
      'content-type':"application/json",
    },
    body:JSON.stringify({
    
      categoryId:categoryId,

    }),
    });

    const data = await response.json();

    if(response.ok && data.status === true){
      Swal.fire(
        "Offer removed",
        "The offer has been removed",
        "success"
      ).then(()=>{
        location.reload();
      });
    } else {
      Swal.fire("Failed", data.message || "Removing offer failed","error");
    }

  } catch (error) {
    Swal.fire(
      "Error",
      "An error occured while removing the offer",
      "error"
    );
    console.error("Error removing offer",error);
  }
 }



  </script>

<%- include("../../views/partials/admin/footer") %>
