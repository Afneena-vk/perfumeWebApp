<%- include("../../views/partials/user/header") %>
<style>
    body {
        background-color: rgb(243, 242, 238);
    }
</style>

<div class="container mt-5">
    
    <h3 class="text-center mb-4">Edit Address</h3>

   
    <form action="/editAddress?id=<%= address._id %>" method="POST" onsubmit="return validateEditForm()">
        
        <div class="form-group mb-3">
            <label for="addressType">Address Type</label>
            <input type="text" class="form-control" id="addressType" name="addressType" value="<%= address.addressType %>">
            <small class="text-danger d-none" id="addressTypeError">Address Type must be either 'Home' or 'Office'.</small>
        </div>

        
        <div class="form-group mb-3">
            <label for="name">Name</label>
            <input type="text" class="form-control" id="name" name="name" value="<%= address.name %>">
            <small class="text-danger d-none" id="nameError">Name can only include alphabets and spaces.</small>
        </div>

       
        <div class="form-group mb-3">
            <label for="city">City</label>
            <input type="text" class="form-control" id="city" name="city" value="<%= address.city %>">
            <small class="text-danger d-none" id="cityError">City field cannot be empty.</small>
        </div>

        
        <div class="form-group mb-3">
            <label for="landMark">Landmark</label>
            <input type="text" class="form-control" id="landMark" name="landMark" value="<%= address.landMark %>">
            <small class="text-danger d-none" id="landMarkError">Landmark field cannot be empty.</small>
        </div>

       
        <div class="form-group mb-3">
            <label for="state">State</label>
            <input type="text" class="form-control" id="state" name="state" value="<%= address.state %>">
            <small class="text-danger d-none" id="stateError">State field cannot be empty.</small>
        </div>

        
        <div class="form-group mb-3">
            <label for="pincode">Pincode</label>
            <input type="text" class="form-control" id="pincode" name="pincode" value="<%= address.pincode %>">
            <small class="text-danger d-none" id="pincodeError">Pincode must contain only numbers.</small>
        </div>

       
        <div class="form-group mb-3">
            <label for="phone">Phone</label>
            <input type="text" class="form-control" id="phone" name="phone" value="<%= address.phone %>">
            <small class="text-danger d-none" id="phoneError">Phone Number must be a 10-digit number.</small>
        </div>

        
        <button type="submit" class="btn btn-success mt-3">Update Address</button>
        <a href="/userProfile" class="btn btn-secondary mt-3">Cancel</a>
    </form>
</div>

<script>
    function validateEditForm() {
        let isValid = true;

       
        const addressType = document.getElementById("addressType").value.trim();
        const name = document.getElementById("name").value.trim();
        const city = document.getElementById("city").value.trim();
        const landMark = document.getElementById("landMark").value.trim();
        const state = document.getElementById("state").value.trim();
        const pincode = document.getElementById("pincode").value.trim();
        const phone = document.getElementById("phone").value.trim();

        
        const nameRegex = /^[A-Za-z\s]+$/;
        const phoneRegex = /^[0-9]{10}$/;
        const pincodeRegex = /^[0-9]+$/;

        
        const addressTypeError = document.getElementById("addressTypeError");
        if (addressType.toLowerCase() !== "home" && addressType.toLowerCase() !== "office") {
            addressTypeError.classList.remove("d-none");
            isValid = false;
        } else {
            addressTypeError.classList.add("d-none");
        }

       
        const nameError = document.getElementById("nameError");
        if (!nameRegex.test(name)) {
            nameError.classList.remove("d-none");
            isValid = false;
        } else {
            nameError.classList.add("d-none");
        }

       
        const cityError = document.getElementById("cityError");
        if (city === "") {
            cityError.classList.remove("d-none");
            isValid = false;
        } else {
            cityError.classList.add("d-none");
        }

        
        const landMarkError = document.getElementById("landMarkError");
        if (landMark === "") {
            landMarkError.classList.remove("d-none");
            isValid = false;
        } else {
            landMarkError.classList.add("d-none");
        }

        
        const stateError = document.getElementById("stateError");
        if (state === "") {
            stateError.classList.remove("d-none");
            isValid = false;
        } else {
            stateError.classList.add("d-none");
        }

        
        const pincodeError = document.getElementById("pincodeError");
        if (!pincodeRegex.test(pincode)) {
            pincodeError.classList.remove("d-none");
            isValid = false;
        } else {
            pincodeError.classList.add("d-none");
        }

        
        const phoneError = document.getElementById("phoneError");
        if (!phoneRegex.test(phone)) {
            phoneError.classList.remove("d-none");
            isValid = false;
        } else {
            phoneError.classList.add("d-none");
        }

        return isValid;
    }
</script>

<%- include("../../views/partials/user/footer") %>
